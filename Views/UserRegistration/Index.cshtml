@model IEnumerable<UserRegistrationApp.Models.UserDto>
@{
    ViewData["Title"] = "User Management";
}


<h2>User Management</h2>

<button id="addUserBtn" class="btn btn-primary" data-toggle="modal" data-target="#userModal">Add User</button>

<table class="table">
    <thead>
        <tr>
            <th>Name</th>
            <th>Email</th>
            <th>Phone</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody id="userTableBody">
        @foreach (var user in Model)
        {
            <tr id="user-@user.Id">
                <td>@user.Name</td>
                <td>@user.Email</td>
                <td>@user.Phone</td>
                <td>Action</td>
                <td>
                    <button class="btn btn-info editUser" data-id="@user.Id">Edit</button>
                    <button class="btn btn-danger deleteUser" data-id="@user.Id">Delete</button>
                </td>
            </tr>
        }
    </tbody>
</table>

<!-- Modal for User Form -->
<div class="modal fade" id="userModal" tabindex="-1" role="dialog" aria-labelledby="userModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="userModalLabel">User Form</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="userForm" novalidate>
                    <input type="hidden" id="userId" />
                    <div class="mb-3">
                        <label for="userName" class="form-label">Name</label>
                        <input type="text" class="form-control" id="userName" required />
                        <div class="invalid-feedback">Name  is Required .</div>

                    </div>
                    <div class="mb-3">
                        <label for="userEmail" class="form-label">Email</label>
                        <input type="email" class="form-control" id="userEmail" required  />
                        <div class="invalid-feedback">Please enter a valid email.</div>

                    </div>
                    <div class="mb-3">
                        <label for="userPhone" class="form-label">Phone</label>
                        <input type="text" class="form-control" id="userPhone" required />
                        <div class="invalid-feedback">Please enter your phone number.</div>

                    </div>
                    <div class="mb-3">
                        <label for="stateSelect" class="form-label">State</label>
                        <select id="stateSelect" class="form-control" required>
                            <option value="">Select State</option>
                        </select>
                        <div class="invalid-feedback"> State is Required.</div>

                    </div>
                    <div class="mb-3">
                        <label for="citySelect" class="form-label">City</label>
                        <select id="citySelect" class="form-control" required>
                            <option value="">Select City</option>
                        </select>
                        <div class="invalid-feedback">City is Required </div>

                    </div>
                    <div class="mb-3">
                        <div class="form-check">
                            <input type="checkbox" class="form-check-input" id="agreeCheck" required />
                            <label class="form-check-label" for="agreeCheck">Agree?</label>
                        </div>
                    </div>
                    <button type="submit" class="btn btn-primary" id="submitBtn" disabled>Submit</button>
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function () {
            // Disable submit button initially
            $('#submitBtn').prop('disabled', true);

            // Load states on page load
            loadStates();

            // Enable/Disable submit button based on Agree checkbox
            $('#agreeCheck').change(function () {
                $('#submitBtn').prop('disabled', !this.checked);
            });

            $('#stateSelect').change(function () {
                const selectedState = $(this).find(':selected').text(); // Get the state name
                if (selectedState) {
                    loadCities(selectedState); // Load cities based on selected state name
                } else {
                    $('#citySelect').empty().append(new Option("Select City", "")); // Reset city dropdown
                }
            });

            // Handle Add User Button
            $('#addUserBtn').click(function () {
                $('#userForm')[0].reset();
                $('#userId').val('');
                $('#citySelect').empty().append(new Option("Select City", ""));
                $('#agreeCheck').prop('checked', false);
                $('#submitBtn').prop('disabled', true);
            });

            // Handle Edit User Button
            $(document).on('click', '.editUser', function () {
                var userId = $(this).data('id');
                $.ajax({
                    url: '/api/user/' + userId,
                    method: 'GET',
                    success: function (user) {
                        $('#userId').val(user.id);
                        $('#userName').val(user.name);
                        $('#userEmail').val(user.email);
                        $('#userPhone').val(user.phone);
                        $('#stateSelect').val(user.stateId).change(); // Make sure this matches your DTO
                        $('#citySelect').val(user.cityId); // Make sure this matches your DTO
                        $('#agreeCheck').prop('checked', true);
                        $('#submitBtn').prop('disabled', false);
                        $('#userModal').modal('show');
                    },
                    error: function (xhr) {
                        alert('Error fetching user data: ' + xhr.responseText);
                    }
                });
            });

            // Handle Form Submission
            $('#userForm').submit(function (e) {
                e.preventDefault();
                // Clear previous validation messages
                $('.form-control').removeClass('is-invalid');

                // Check if the form is valid
                if (this.checkValidity() === false) {
                    e.stopPropagation();
                    // Add 'is-invalid' class to invalid fields
                    $('.form-control:invalid').addClass('is-invalid');
                    return;
                }

                // Proceed with the AJAX request if valid
               var user = {
                    name: $('#userName').val(),
                    email: $('#userEmail').val(),
                    phone: $('#userPhone').val(),
                    stateId: parseInt($('#stateSelect').val()), // Convert to integer
                    cityId: parseInt($('#citySelect').val())    // Convert to integer
                };
                // Include id only if editing
                if ($('#userId').val()) {
                    user.id = parseInt($('#userId').val()); // Ensure id is also an integer
                }

                var method = user.id ? 'PUT' : 'POST';
                var url = user.id ? '/api/user/' + user.id : '/api/user';

                $.ajax({
                    method: method,
                    url: url,
                    data: JSON.stringify(user),
                    contentType: "application/json",
                    success: function () {
                        if (user.id) 
                        {
                            alert('User updated successfully!'); // Alert for update
                        } else {
                            alert('User created successfully!'); // Alert for creation
                        }
                        location.reload();
                    },
                    error: function (xhr) {
                        alert("Error: " + xhr.responseText);
                    }
                });
            });

            // Handle Delete User Button
            $(document).on('click', '.deleteUser', function () {
                var userId = $(this).data('id');
                if (confirm("Are you sure you want to delete this user?")) {
                    $.ajax({
                        method: 'DELETE',
                        url: '/api/user/' + userId,
                        success: function () {
                            $('#user-' + userId).remove();
                            alert('User deleted successfully!');
                        },
                        error: function (xhr) {
                            alert("Error: " + xhr.responseText);
                        }
                    });
                }
            });
        });

        // Function to load states
        function loadStates() {
            $.ajax({
                url: '/api/user/states',
                method: 'GET',
                success: function (states) {
                    $('#stateSelect').empty();
                    $('#stateSelect').append(new Option("Select State", "")); // Default option

                    $.each(states, function (index, state) {
                        $('#stateSelect').append('<option value="' + state.id + '">' + state.name + '</option>');
                    });
                },
                error: function (xhr) {
                    alert('Error loading states: ' + xhr.responseText);
                }
            });
        }

        // Function to load cities based on selected state
        function loadCities(state) {
            $.ajax({
                url: '/api/user/cities/' + state,
                method: 'GET',
                success: function (cities) {
                    $('#citySelect').empty().append(new Option("Select City", ""));
                    $.each(cities, function (index, city) {
                        $('#citySelect').append('<option value="' + city.id + '">' + city.name + '</option>'); // Use id and name
                    });
                },
                error: function (xhr) {
                    alert('Error loading cities: ' + xhr.responseText);
                }
            });
        }
    </script>
}


